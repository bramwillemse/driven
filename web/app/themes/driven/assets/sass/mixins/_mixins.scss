/* =========== Mixins */

/* Calculate fluid ratio based on two dimensions (width/height) */
@mixin fluid-ratio($large-size, $small-size) {
    $width-large: nth($large-size, 1);
    $width-small: nth($small-size, 1);
    $height-large: nth($large-size, 2);
    $height-small: nth($small-size, 2);
    $slope: ($height-large - $height-small) / ($width-large - $width-small);
    $height: $height-small - $width-small * $slope;

    padding-top: $slope * 100%;
    height: $height;

    background-size: cover;
    -moz-background-size: cover;  /* Firefox 3.6 */
    background-position: center;  /* Internet Explorer 7/8 */
    background-repeat: no-repeat;
}

@mixin gradient($side, $start, $end) {
    background-color: $end;
    background-image: -webkit-linear-gradient($side, $start, $end); 
    background-image: -moz-linear-gradient($side, $start, $end); 
    background-image: -ms-linear-gradient($side, $start, $end);
    background-image: -o-linear-gradient($side, $start, $end);
    background-image: linear-gradient($side, $start, $end);
}

@mixin gradient-ie($start, $end) {
    *zoom: 1;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start}', endColorstr='#{$end}');
    -ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start}', endColorstr='#{$end}');
}

@mixin font-size($sizeValue: 1, $line: $sizeValue * 1.5){
  //font-size: ($sizeValue * 15) + px;
  //line-height: ($line * 15) + px;
  font-size: $sizeValue + em;
  line-height: $line + em;
}